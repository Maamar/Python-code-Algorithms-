import math
import numpy as np
import matplotlib.pyplot as plt

def solve_quadratic_equation(a, b, c):
    discriminant = b**2 - 4*a*c
    
    if discriminant > 0:
        root1 = (-b + math.sqrt(discriminant)) / (2*a)
        root2 = (-b - math.sqrt(discriminant)) / (2*a)
        print(f"The roots are real and different: {root1} and {root2}")
        return root1, root2
    elif discriminant == 0:
        root = -b / (2*a)
        print(f"The root is real and repeated: {root}")
        return root, root
    else:
        real_part = -b / (2*a)
        imaginary_part = math.sqrt(-discriminant) / (2*a)
        print(f"The roots are complex: {real_part} + {imaginary_part}i and {real_part} - {imaginary_part}i")
        return None, None

def plot_quadratic_equation(a, b, c, roots):
    x = np.linspace(-10, 10, 400)
    y = a*x**2 + b*x + c
    
    plt.figure(figsize=(8, 6))
    plt.plot(x, y, label='Quadratic Equation')
    plt.axhline(0, color='black', linewidth=0.5)
    plt.axvline(0, color='black', linewidth=0.5)
    plt.grid(color='gray', linestyle='--', linewidth=0.5)
    
    # Plot roots if they are real
    if roots[0] is not None:
        plt.plot(roots[0], 0, 'ro', label='Root 1')  # Mark root1
    if roots[1] is not None and roots[1] != roots[0]:  # Check if root2 is different
        plt.plot(roots[1], 0, 'go', label='Root 2')  # Mark root2
    
    plt.legend()
    plt.title('Quadratic Function and its Roots')
    plt.xlabel('x')
    plt.ylabel('y')
    plt.show()

# Prompt the user to enter the coefficients a, b, and c
print("Enter the coefficients of the quadratic equation (ax^2 + bx + c = 0):")
a = float(input("Enter coefficient a: "))
b = float(input("Enter coefficient b: "))
c = float(input("Enter coefficient c: "))

if a == 0:
    print("Coefficient a cannot be 0 for a quadratic equation.")
else:
    roots = solve_quadratic_equation(a, b, c)
    plot_quadratic_equation(a, b, c, roots)
